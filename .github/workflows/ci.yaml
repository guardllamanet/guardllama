name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Run build
        run: |
          make build build_with_tele
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run tests
        run: |
          make test
  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Run vet
        run: |
          make tools
          make vet
  e2etest:
    name: E2Etest
    needs: [build, test, vet]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Run e2etest
        run: |
          make tools
          make glm_install
          make e2etest
  docker:
    name: Docker
    needs: [e2etest]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Generate build meta
        run: |
          echo "build_version=${GITHUB_SHA::6}" >> $GITHUB_ENV
          echo "build_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/guardllamanet/glmmgr
            ghcr.io/guardllamanet/glmmgr-wg

      # build flutter assets
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Run Flutter build
        run: |
          make internal/web/ui/dist/flutter.js

      - name: Docker push
        uses: docker/bake-action@v2
        with:
          push: true
          pull: true
          targets: all
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          set: |
            mgr.tags=ghcr.io/guardllamanet/glmmgr:main
            wg.tags=ghcr.io/guardllamanet/glmmgr-wg:main
            *.args.BUILD_VERSION=${{ env.build_version }}
            *.args.BUILD_DATE=${{ env.build_date }}
            *.platform=linux/arm64,linux/amd64
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  installer_test:
    name: Installer Test
    needs: [docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Run installer test
        run: |
          make installer_test
